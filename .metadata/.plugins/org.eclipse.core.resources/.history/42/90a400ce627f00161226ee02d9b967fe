package levels;

import java.util.Collection;
import java.util.Iterator;
import java.util.Queue;

import displays.WorldTemplate;

public abstract class WorldQueue implements Queue<WorldTemplate>{

	private WorldTemplate arr[];
	private int size, first, next;
	
	public WorldQueue() {
		arr = new WorldTemplate[2];
	}
	
	@Override
	public int size() {
		return size;
	}

	@Override
	public boolean isEmpty() {
		return size == 0;
	}

	@Override
	public boolean contains(Object o) {
		if(o instanceof WorldTemplate){
			WorldTemplate otemp = (WorldTemplate)o;
			for(int i=0; i<size; i++){
				if(arr[i] == otemp)
					return true;
			}
		}
		//only contains templates
		return false;
	}

	@Override
	public Object[] toArray() {
		return arr;
	}

	@Override
	public boolean remove(Object o) {
		for(int i=0; i<size; i++){
			
		}
		return false;
	}

	@Override
	public boolean containsAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean addAll(Collection<? extends WorldTemplate> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean retainAll(Collection<?> c) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean add(WorldTemplate e) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public WorldTemplate remove() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public WorldTemplate poll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public WorldTemplate element() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public WorldTemplate peek() {
		// TODO Auto-generated method stub
		return null;
	}

}
